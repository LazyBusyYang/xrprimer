diff --git a/CMakeLists.txt b/CMakeLists.txt
index ea7e9b84..a21c3935 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -146,33 +146,33 @@ endif()
 set_property(CACHE CERES_THREADING_MODEL PROPERTY STRINGS
   ${CERES_THREADING_MODELS_AVAILABLE})

-option(MINIGLOG "Use a stripped down version of glog." OFF)
-option(GFLAGS "Enable Google Flags." ON)
+option(MINIGLOG "Use a stripped down version of glog." ON)
+option(GFLAGS "Enable Google Flags." OFF)
 option(SUITESPARSE "Enable SuiteSparse." ON)
 option(CXSPARSE "Enable CXSparse." ON)
 if (APPLE)
   option(ACCELERATESPARSE
     "Enable use of sparse solvers in Apple's Accelerate framework." ON)
 endif()
-option(LAPACK "Enable use of LAPACK directly within Ceres." ON)
+option(LAPACK "Enable use of LAPACK directly within Ceres." OFF)
 # Template specializations for the Schur complement based solvers. If
 # compile time, binary size or compiler performance is an issue, you
 # may consider disabling this.
 option(SCHUR_SPECIALIZATIONS "Enable fixed-size schur specializations." ON)
 option(CUSTOM_BLAS
        "Use handcoded BLAS routines (usually faster) instead of Eigen."
-       ON)
+       OFF)
 # Enable the use of Eigen as a sparse linear algebra library for
 # solving the nonlinear least squares problems.
 option(EIGENSPARSE "Enable Eigen as a sparse linear algebra library." ON)
 option(EXPORT_BUILD_DIR
   "Export build directory using CMake (enables external use without install)." OFF)
-option(BUILD_TESTING "Enable tests" ON)
+option(BUILD_TESTING "Enable tests" OFF)
 option(BUILD_DOCUMENTATION "Build User's Guide (html)" OFF)
-option(BUILD_EXAMPLES "Build examples" ON)
-option(BUILD_BENCHMARKS "Build Ceres benchmarking suite" ON)
+option(BUILD_EXAMPLES "Build examples" OFF)
+option(BUILD_BENCHMARKS "Build Ceres benchmarking suite" OFF)
 option(BUILD_SHARED_LIBS "Build Ceres as a shared library." OFF)
-option(PROVIDE_UNINSTALL_TARGET "Add a custom target to ease removal of installed targets" ON)
+option(PROVIDE_UNINSTALL_TARGET "Add a custom target to ease removal of installed targets" OFF)
 set(SANITIZERS "" CACHE STRING "Semicolon-separated list of sanitizers to use (e.g address, memory, thread)")
 include(EnableSanitizer)
 enable_sanitizer(${SANITIZERS})
